# don't prefix log entries with App PID stdout
passenger_disable_log_prefix on;

# don't show Passenger version
passenger_show_version_in_header off;

passenger_log_level 4;

# keep instances alive instead of respawning
passenger_min_instances 6;

server {
    listen 80;
    server_name twistedthreads.org www.twistedthreads.org;
    return 301 https://twistedthreads.org$request_uri;
}

server {
    listen 443 ssl http2; #https of www*, 301 to right domain.
    server_name www.twistedthreads.org;

    ssl_certificate /etc/letsencrypt/live/twistedthreads.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/twistedthreads.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    return 301 https://twistedthreads.org$request_uri;
}

server {
    listen 443 ssl http2;
    server_name twistedthreads.org;

    # Tell Nginx and Passenger where your app's 'public' directory is
    root /var/www/twistedthreads/bundle/public;

    # Turn on Passenger
    passenger_enabled on;

    # Tell Passenger that your app is a Meteor app
    passenger_app_type node;
    passenger_startup_file main.js;
    passenger_app_root /var/www/twistedthreads/bundle;

    # number of proxies in front of server so client ip address can be found
    passenger_env_var HTTP_FORWARDED_COUNT 1;

    # Tell your app where MongoDB is
    passenger_env_var MONGO_URL mongodb://127.0.0.1:27017/twistedthreads;

    # Tell your app about the oplog
    passenger_env_var MONGO_OPLOG_URL mongodb://127.0.0.1:27017/local;

    # Tell your app what its root URL is
    passenger_env_var ROOT_URL 'https://twistedthreads.org/';

    # maintenance mode on / off
    passenger_env_var MAINTENANCE_MODE false;

    # mail credentials
    passenger_env_var MAIL_URL "smtp://postmaster%40domain:password@smtp.mailgun.org:587";

    # AWS credentials for S3 image storage
    passenger_env_var AWS_ACCESS_KEY_ID "key_id";
    passenger_env_var AWS_SECRET_ACCESS_KEY "key";
    passenger_env_var AWS_BUCKET "bucket";
    passenger_env_var AWSRegion "region";

    # deny all paths by default
    location / {
        deny all;
    }

    # allow sockjs
    location /sockjs { }

    # allow main menu routes
    location = / { }
    location = /recent-patterns { }
    location = /new-patterns { }
    location = /my-patterns { }
    location = /all-patterns { }
    location = /people { }
    location = /about { }
    location = /faq { }

    # allow pattern routes
    location /pattern { }

    # allow user pages
    location /user { }

    # allow set details page
    location /set { }

    # allow account routes
    location = /login { }
    location = /register { }
    location = /welcome { }
    location = /account { }
    location /verify-email { }
    location = /change-password { }
    location = /forgot-password { }
    location /reset-password { }

    # serve js and css
    location ~* "^/[a-z0-9]{40}\.(css|js)$" {
      root /var/www/twistedthreads/bundle/programs/web.browser;
      access_log off;
      expires max;
    }

    # serve public folder
    location ~ \.(jpg|jpeg|png|gif|mp3|ico|pdf|svg) {
      root /var/www/twistedthreads/bundle/public;
      access_log off;
      expires max;
    }

    # deny unwanted requests
    location ~ (\.php|.aspx|.asp|myadmin) {
      return 404;
    }

    # don't show nginx version
    server_tokens off;

    add_header X-Frame-Options SAMEORIGIN;

    # SSL options are set in /etc/letsencrypt/options-ssl-nginx.conf
    # however they are also in /etc/nginx/nginx.conf for general use

    ssl_certificate /etc/letsencrypt/live/twistedthreads.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/twistedthreads.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}